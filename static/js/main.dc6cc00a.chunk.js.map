{"version":3,"sources":["containers/App.js","components/Message.js","components/FunctionButtons.js","components/Tile.js","components/Board.js","index.js"],"names":["levels","App","props","_this","Object","_home_dominik_Pulpit_Kodilla_25_Express_js_sudoku2_sudoku_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_dominik_Pulpit_Kodilla_25_Express_js_sudoku2_sudoku_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_dominik_Pulpit_Kodilla_25_Express_js_sudoku2_sudoku_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","initialBoard","board","backBoard","difficult","message","e","index","target","value","isNaN","playerUpdateBoard","split","map","newValue","undoBoard","setState","join","sudoku","solve","level","newBoard","generate","answer","easyDifficult","_this2","selectLevel","onChange","check","newGame","reset","undo","_this$state","buttons","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","key","className","onClick","bind","concat","_components_Board__WEBPACK_IMPORTED_MODULE_8__","_components_Message__WEBPACK_IMPORTED_MODULE_9__","_components_FunctionButtons__WEBPACK_IMPORTED_MODULE_10__","React","Component","hot","module","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Message","FunctionButtons","Tile","react_default","type","min","max","playerOnChange","readonly","Board","splitBoard","splitInitialBoard","renderBoard","src_components_Tile","r","__webpack_exports__","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_containers_App__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc6cc00a.chunk.js","sourcesContent":["import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport sudoku from 'sudoku-umd';\nimport Board from '../components/Board'\nimport Message from '../components/Message';\nimport FunctionButtons from '../components/FunctionButtons';\n\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport './App.scss';\n\nconst levels = ['easy', 'medium', 'hard', 'insane', 'inhuman'];\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialBoard: '487591623325786914619243785793168542142975368568432197856314279271859436934627851',\n            board: '487591623325786914619243785793168542142975368568432197856314279271859436934627851',\n            backBoard: '',\n            difficult: 'easy',\n            message: '',\n        }\n    }\n\n    onChange(e, index) {\n        if (e.target.value > 0 && e.target.value <= 9 && isNaN(e.target.value) === false) {\n            let playerUpdateBoard = this.state.board.split('').map((value, newValue) => {\n                if (newValue === index) {\n                    return e.target.value;\n                } else {\n                    return value;\n                }\n            });\n\n            const undoBoard = this.state.board.split('');\n            \n            this.setState({\n                board: playerUpdateBoard.join(''),\n                backBoard: undoBoard.join('')\n            })\n        }\n    };\n\n    check () {\n        const prompt = sudoku.solve(this.state.board);\n\n        if (prompt) {\n            this.setState({\n                message: 'Good for you!'\n            });\n        } else {\n            this.setState({\n                message: 'You made a mistake!'\n            });\n        }\n    };\n\n    newGame() {\n        const level = this.state.difficult;\n        const newBoard = sudoku.generate(level);\n        \n        this.setState({\n            board: newBoard,\n            initialBoard: newBoard,\n            backBoard: newBoard,\n            message: ''\n        })\n    };\n\n    solve() {\n        const answer = sudoku.solve(this.state.board);\n        \n        if (answer) {\n            this.setState({\n                board: answer,\n                initialBoard: answer,\n                backBoard: answer,\n                message: 'Solved sudoku!'\n            })  \n        } else {\n            this.setState({\n                message: 'Error of the solution!'\n            })\n        }        \n    };\n\n    reset() {\n        const initialBoard = this.state.initialBoard;\n    \n        this.setState({\n            board: initialBoard,\n            backBoard: initialBoard,\n            message: ''\n        })\n    };\n\n    undo() {\n        const backBoard = this.state.backBoard;\n    \n        this.setState({\n            board: backBoard\n        })\n    };\n\n    selectLevel(index) {\n        const easyDifficult = index;\n        \n        this.setState({\n            difficult: easyDifficult\n        })\n    };\n\n    render() {\n        const {selectLevel, onChange, check, newGame, solve, reset, undo} = this;\n        const {initialBoard, board, message, difficult} = this.state;\n\n        const buttons = levels.map((level, index) => (\n            <button\n                key={index}\n                className='col-5 col-md-1'\n                onClick={selectLevel.bind(this, `${level}`)}\n            >\n                {level}\n            </button>\n        ))\n        \n        return (\n            <div className='container_app'>\n                <h1 className='title'>Sudoku</h1>\n                <Board \n                    initialBoard={initialBoard} \n                    board={board}\n                    onChange={onChange.bind(this)}\n                />\n                <Message \n                    message={message} \n                />\n                <FunctionButtons\n                    check={check.bind(this)}\n                    newGame={newGame.bind(this)}\n                    solve={solve.bind(this)}\n                    reset={reset.bind(this)}\n                    undo={undo.bind(this)}\n                />\n                <p className='level_info'>Select level: {difficult}</p>\n                <div className='buttons_difficult row'>\n                   {buttons}\n                </div>          \n            </div>\n        )\n    }\n};\n\nexport default hot(module)(App);\n","import React from 'react';\n\nconst Message = props => (\n    <p className='information'>{props.message}</p>\n);\n\nexport default Message;","import React from 'react';\n\nconst FunctionButtons = props => {\n    const {\n        undo,\n        reset,\n        solve,\n        check,\n        newGame\n    } = props;\n\n    return (\n        <div className='buttons_container row'>\n            <button className='col-5 col-md-1' onClick={check}>Check</button>\n            <button className='col-5 col-md-1' onClick={newGame}>New Game</button>\n            <button className='col-5 col-md-1' onClick={solve}>Solve</button>\n            <button className='col-5 col-md-1' onClick={reset}>Reset</button>\n            <button className='col-5 col-md-1' onClick={undo}>Undo</button>\n        </div>\n    )\n}\n\nexport default FunctionButtons;","import React from 'react';\n\nimport './Tile.scss';\n\nconst Tile = props => \n    <input\n        type='number'\n        min='1'\n        max='9'\n        value={props.value}\n        onChange={props.playerOnChange}\n        className={`${ props.readonly ? 'disable' : 'write' }`}\n    />\n    \nexport default Tile;","import React from 'react';\nimport Tile from './Tile';\n\nimport './Board.scss';\n\nconst Board = props => {\n    const splitBoard = props.board.split('');\n    const splitInitialBoard = props.initialBoard.split('');\n\n    const renderBoard = splitBoard.map((value, index) => {\n        if (splitInitialBoard[index] === '.') {\n            return <Tile playerOnChange={e => props.onChange(e, index)} key={index} value={value} />\n        } else {\n            return <Tile key={index} value={value} readonly/>\n        }\n    })\n\n    return(\n        <div className='board'>\n            {renderBoard}\n        </div>\n    )\n}\n\nexport default Board;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('app')\n);"],"sourceRoot":""}