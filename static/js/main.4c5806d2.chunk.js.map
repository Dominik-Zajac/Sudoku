{"version":3,"sources":["containers/App.js","components/Tile.js","components/Board.js","index.js"],"names":["App","props","_this","Object","_home_dominik_Pulpit_Kodilla_25_Express_js_sudoku2_sudoku_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_dominik_Pulpit_Kodilla_25_Express_js_sudoku2_sudoku_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_dominik_Pulpit_Kodilla_25_Express_js_sudoku2_sudoku_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","initialBoard","board","backBoard","difficult","message","e","index","target","value","isNaN","playerUpdateBoard","split","map","newValue","undoBoard","setState","join","sudoku","solve","level","newBoard","generate","answer","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_components_Board__WEBPACK_IMPORTED_MODULE_6__","onChange","bind","onClick","check","newGame","reset","undo","easyLevel","mediumLevel","hardLevel","insaneLevel","inhumanLevel","React","Component","hot","module","Tile","react_default","type","min","max","playerOnChange","concat","readonly","Board","splitBoard","splitInitialBoard","renderBoard","src_components_Tile","key","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_containers_App__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c5806d2.chunk.js","sourcesContent":["import React from 'react';\nimport Board from '../components/Board'\nimport { hot } from 'react-hot-loader';\nimport sudoku from 'sudoku-umd';\n\nimport './App.scss';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n           \tinitialBoard: '487591623325786914619243785793168542142975368568432197856314279271859436934627851',\n\t\t\tboard: '487591623325786914619243785793168542142975368568432197856314279271859436934627851',\n\t\t\tbackBoard: '',\n\t\t\tdifficult: 'easy',\n\t\t\tmessage: ''\n\t\t}\n\t}\n\n\tonChange(e, index) {\n\t\tif (e.target.value > 0 && e.target.value <= 9 && isNaN(e.target.value) === false) {\n\t\t\tlet playerUpdateBoard = this.state.board.split('').map((value, newValue) => {\n\t\t\t\tif (newValue === index) {\n\t\t\t\t\treturn e.target.value;\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst undoBoard = this.state.board.split('');\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tboard: playerUpdateBoard.join(''),\n\t\t\t\tbackBoard: undoBoard.join('')\n\t\t\t})\n\t\t}\n\t};\n\n\tcheck () {\n\t\tconst prompt = sudoku.solve(this.state.board);\n\t\tif (prompt) {\n\t\t\tthis.setState({\n\t\t\t\tmessage: 'Good for you!'\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tmessage: 'You made a mistake!'\n\t\t\t});\n\t\t}\n\t};\n\n\tnewGame() {\n\t\tconst level = this.state.difficult;\n\t\tconst newBoard = sudoku.generate(level);\n\t\t\n\t\tthis.setState({\n\t\t\tboard: newBoard,\n\t\t\tinitialBoard: newBoard,\n\t\t\tbackBoard: newBoard,\n\t\t\tmessage: ''\n\t\t})\n\t};\n\n\tsolve() {\n\t\tconst answer = sudoku.solve(this.state.board);\n\t\t\n\t\tif (answer) {\n\t\t\tthis.setState({\n\t\t\t\tboard: answer,\n\t\t\t\tinitialBoard: answer,\n\t\t\t\tbackBoard: answer,\n\t\t\t\tmessage: 'Solved sudoku!'\n\t\t\t})\t\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tmessage: 'Error of the solution!'\n\t\t\t})\n\t\t}\n\t\t\n\t};\n\n\treset() {\n\t\tconst initialBoard = this.state.initialBoard;\n\t\n\t\tthis.setState({\n\t\t\tboard: initialBoard,\n\t\t\tbackBoard: initialBoard,\n\t\t\tmessage: ''\n\t\t})\n\t};\n\n\tundo() {\n\t\tconst backBoard = this.state.backBoard;\n\t\n\t\tthis.setState({\n\t\t\tboard: backBoard\n\t\t})\n\t};\n\n\teasyLevel() {\n\t\tconst easyDifficult = 'easy';\n\t\t\n\t\tthis.setState({\n\t\t\tdifficult: easyDifficult\n\t\t})\n\t};\n\n\tmediumLevel() {\n\t\tconst mediumDifficult = 'medium';\n\t\t\n\t\tthis.setState({\n\t\t\tdifficult: mediumDifficult\n\t\t})\n\t};\n\n\thardLevel() {\n\t\tconst hardDifficult = 'hard';\n\t\t\n\t\tthis.setState({\n\t\t\tdifficult: hardDifficult\n\t\t})\n\t};\n\n\tinsaneLevel() {\n\t\tconst insaneDifficult = 'insane';\n\t\t\n\t\tthis.setState({\n\t\t\tdifficult: insaneDifficult\n\t\t})\n\t};\n\n\tinhumanLevel() {\n\t\tconst inhumanDifficult = 'inhuman';\n\t\n\t\tthis.setState({\n\t\t\tdifficult: inhumanDifficult\n\t\t})\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='container_app'>\n\t\t\t\t<h1 className='title'>Sudoku</h1>\n\t\t\t\t<Board \n\t\t\t\t\tinitialBoard={ this.state.initialBoard } \n\t\t\t\t\tboard={ this.state.board }\n\t\t\t\t\tonChange={ this.onChange.bind(this) }\n\t\t\t\t/>\n\t\t\t\t<p className='information'>{this.state.message}</p>\n\t\t\t\t<div className='buttons_container'>\n\t\t\t\t\t<button onClick={ this.check.bind(this) }>Check</button>\n\t\t\t\t\t<button onClick={ this.newGame.bind(this) }>New Game</button>\n\t\t\t\t\t<button onClick={ this.solve.bind(this) }>Solve</button>\n\t\t\t\t\t<button onClick={ this.reset.bind(this) }>Reset</button>\n\t\t\t\t\t<button onClick={ this.undo.bind(this) }>Undo</button>\n\t\t\t\t</div>\n\t\t\t\t<p className='level_info'>Select level: {this.state.difficult}</p>\n\t\t\t\t<div className='buttons_difficult'>\n\t\t\t\t\t\t<button onClick={ this.easyLevel.bind(this) }>Easy</button>\n\t\t\t\t\t\t<button onClick={ this.mediumLevel.bind(this) }>Medium</button>\n\t\t\t\t\t\t<button onClick={ this.hardLevel.bind(this) }>Hard</button>\n\t\t\t\t\t\t<button onClick={ this.insaneLevel.bind(this) }>Insane</button>\n\t\t\t\t\t\t<button onClick={ this.inhumanLevel.bind(this) }>Inhuman</button>\n\t\t\t\t</div>\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n};\n\nexport default hot(module)(App);","import React from 'react';\n\nimport './Tile.scss';\n\nconst Tile = props => \n\t<input\n\t\ttype='number'\n\t\tmin='1'\n\t\tmax='9'\n\t\tvalue={ props.value }\n\t\tonChange={ props.playerOnChange }\n\t\tclassName={ `${ props.readonly ? 'disable' : 'write' }` }\n\t/>\n\t\nexport default Tile;","import React from 'react';\nimport Tile from './Tile';\n\nimport './Board.scss';\n\nconst Board = props => {\n\tconst splitBoard = props.board.split('');\n\tconst splitInitialBoard = props.initialBoard.split('');\n\n\tconst renderBoard = splitBoard.map((value, index) => {\n\t\tif (splitInitialBoard[index] == '.') {\n\t\t\treturn <Tile playerOnChange={ (e)=>props.onChange(e, index) } key={ index } value={ value } />\n\t\t} else {\n\t\t\treturn <Tile key={ index } value={ value } readonly/>\n\t\t}\n\t})\n\n\treturn(\n\t\t<div className='board'>\n\t\t\t{ renderBoard }\n\t\t</div>\n\t)\n}\n\nexport default Board;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('app')\n);"],"sourceRoot":""}